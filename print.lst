


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000 FFFFFFFD 
                       THOUSANDS
                               EQU              -3
   18 00000000 FFFFFFFE 
                       HUNDREDS
                               EQU              -2
   19 00000000 FFFFFFFF 
                       TENS    EQU              -1
   20 00000000 00000000 
                       ONES    EQU              0
   21 00000000 0000002E 
                       DECIMAL EQU              0x2E
   22 00000000 0000270F 
                       LARGEST EQU              0x0270F
   23 00000000         
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000                 THUMB
   26 00000000         
   27 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   28 00000000         ; Output a 32-bit number in unsigned decimal format
   29 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   30 00000000         ; Output: none
   31 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   32 00000000         LCD_OutDec
   33 00000000 E92D 0FF0       PUSH             {R4-R11}    ;Save Registers
   34 00000004 46EB            MOV              R11, SP     ;Frame Pointer
   35 00000006 F1AB 0B01       SUB              R11, #1     ;Allocation
   36 0000000A 4601            MOV              R1, R0
   37 0000000C F04F 040A       MOV              R4, #10     ;R4 = Divisor
   38 00000010 F04F 0A00       MOV              R10, #0     ;Length of Value In
                                                             R0
   39 00000014         LOOP
   40 00000014 FBB1 F1F4       UDIV             R1, R4      ;Checks Length of V
                                                            alue In R0
   41 00000018 2900            CMP              R1, #0
   42 0000001A D002            BEQ              FINISH



ARM Macro Assembler    Page 2 


   43 0000001C F10A 0A01       ADD              R10, R10, #1 ;Counter For Lengt
                                                            h In R10
   44 00000020 E7F8            B                LOOP
   45 00000022         FINISH
   46 00000022 EBAB 0B0A       SUB              R11, R10    ;Allocate Memory
   47 00000026 F04F 0900       MOV              R9, #0
   48 0000002A         STORE_STACK
   49 0000002A FBB0 F5F4       UDIV             R5, R0, R4  ;R5 = Quotient
   50 0000002E FB05 0614       MLS              R6, R5, R4, R0 ;MODULUS ---> R6
                                                             = R0 - (R4 * R5) -
                                                            --> INPUT = (QUOTIE
                                                            NT * DIVISOR)
   51 00000032 FBB0 F0F4       UDIV             R0, R0, R4
   52 00000036 F80B 6009       STRB             R6, [R11, R9] ;Stores Value Of 
                                                            Specific Place In M
                                                            emory In Sequential
                                                             Oreder
   53 0000003A 45D1            CMP              R9, R10
   54 0000003C D002            BEQ              COMPARE
   55 0000003E F109 0901       ADD              R9, R9, #1
   56 00000042 E7F2            B                STORE_STACK
   57 00000044         COMPARE
   58 00000044 46D1            MOV              R9, R10
   59 00000046         PRINT
   60 00000046 F81B 0009       LDRB             R0, [R11, R9]
   61 0000004A F100 0030       ADD              R0, R0, #0x30 ;Hexadecimal To A
                                                            SCII Conversion
   62 0000004E B090            SUB              SP, #64
   63 00000050 E92D 4800       PUSH             {LR, R11}
   64 00000054 F7FF FFFE       BL               ST7735_OutChar ;Prints Values I
                                                            n ASCII From Memory
                                                             In Order
   65 00000058 E8BD 4800       POP              {LR, R11}
   66 0000005C B010            ADD              SP, #64
   67 0000005E F1B9 0F00       CMP              R9, #0
   68 00000062 D002            BEQ              DONE
   69 00000064 F1A9 0901       SUB              R9, #1
   70 00000068 E7ED            B                PRINT
   71 0000006A         DONE
   72 0000006A E8BD 0FF0       POP              {R4-R11}    ;Restore Registers
   73 0000006E 4770            BX               LR          ;Return
   74 00000070         
   75 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   76 00000070         
   77 00000070         ; -----------------------LCD _OutFix--------------------
                       --
   78 00000070         ; Output characters to LCD display in fixed-point format
                       
   79 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   80 00000070         ; Inputs:  R0 is an unsigned 32-bit number
   81 00000070         ; Outputs: none
   82 00000070         ; E.g., R0=0,    then output "0.000 "
   83 00000070         ;       R0=3,    then output "0.003 "
   84 00000070         ;       R0=89,   then output "0.089 "
   85 00000070         ;       R0=123,  then output "0.123 "
   86 00000070         ;       R0=9999, then output "9.999 "
   87 00000070         ;       R0>9999, then output "*.*** "
   88 00000070         ; Invariables: This function must not permanently modify



ARM Macro Assembler    Page 3 


                        registers R4 to R11
   89 00000070         LCD_OutFix
   90 00000070 E92D 0FF0       PUSH             {R4-R11}    ;Save Registers
   91 00000074 46EB            MOV              R11, SP     ;Frame Pointer
   92 00000076 F1AB 0B01       SUB              R11, #1     ;Allocation
   93 0000007A         ;------------------------------------CHECK IF TOO LARGE 
                       - ASTERISKS------------------------------
   94 0000007A F242 740F       LDR              R4, =LARGEST ;Checks With 0x027
                                                            0F
   95 0000007E 42A0            CMP              R0, R4
   96 00000080 D820            BHI              ASTERISK
   97 00000082         ;------------------------------------STORES VALUES------
                       -----------------------------------------
   98 00000082 F04F 040A       MOV              R4, #10     ;R4 = 10 = DIVISOR
   99 00000086 FBB0 F5F4       UDIV             R5, R0, R4  ;R5 = QUOTIENT
  100 0000008A FB05 0614       MLS              R6, R5, R4, R0 ;MODULUS ---> R6
                                                             = R0 - (R4 * R5) -
                                                            --> INPUT = (QUOTIE
                                                            NT * DIVISOR)
  101 0000008E F88B 6000       STRB             R6, [R11, #ONES]
  102 00000092 FBB0 F0F4       UDIV             R0, R4      ;DIVIDE BY 10
  103 00000096 FBB0 F5F4       UDIV             R5, R0, R4  ;R5 = QUOTIENT
  104 0000009A FB05 0614       MLS              R6, R5, R4, R0 ;MODULUS ---> R6
                                                             = R0 - (R4 * R5) -
                                                            --> INPUT = (QUOTIE
                                                            NT * DIVISOR)
  105 0000009E F80B 6C01       STRB             R6, [R11, #TENS]
  106 000000A2 FBB0 F0F4       UDIV             R0, R4      ;DIVIDE BY 10
  107 000000A6 FBB0 F5F4       UDIV             R5, R0, R4  ;R5 = QUOTIENT
  108 000000AA FB05 0614       MLS              R6, R5, R4, R0 ;MODULUS ---> R6
                                                             = R0 - (R4 * R5) -
                                                            --> INPUT = (QUOTIE
                                                            NT * DIVISOR)
  109 000000AE F80B 6C02       STRB             R6, [R11, #HUNDREDS]
  110 000000B2 FBB0 F0F4       UDIV             R0, R4      ;DIVIDE BY 10
  111 000000B6 FBB0 F5F4       UDIV             R5, R0, R4  ;R5 = QUOTIENT
  112 000000BA FB05 0614       MLS              R6, R5, R4, R0 ;MODULUS ---> R6
                                                             = R0 - (R4 * R5) -
                                                            --> INPUT = (QUOTIE
                                                            NT * DIVISOR)
  113 000000BE F80B 6C03       STRB             R6, [R11, #THOUSANDS]
  114 000000C2 E032            B                PRINT_DECIMAL
  115 000000C4         ASTERISK
  116 000000C4 F04F 002A       MOV              R0, #0x2A   ;R0 = ASTERISK HEX 
                                                            VALUE
  117 000000C8 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  118 000000CA E92D 4800       PUSH             {LR, R11}
  119 000000CE F7FF FFFE       BL               ST7735_OutChar
  120 000000D2 E8BD 4800       POP              {LR, R11}
  121 000000D6 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  122 000000D8 F04F 002E       MOV              R0, #DECIMAL ;R0 = DECIMAL HEX 
                                                            VALUE
  123 000000DC B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  124 000000DE E92D 4800       PUSH             {LR, R11}
  125 000000E2 F7FF FFFE       BL               ST7735_OutChar
  126 000000E6 E8BD 4800       POP              {LR, R11}



ARM Macro Assembler    Page 4 


  127 000000EA B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  128 000000EC F04F 002A       MOV              R0, #0x2A   ;R0 = ASTERISK HEX 
                                                            VALUE
  129 000000F0 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  130 000000F2 E92D 4800       PUSH             {LR, R11}
  131 000000F6 F7FF FFFE       BL               ST7735_OutChar
  132 000000FA E8BD 4800       POP              {LR, R11}
  133 000000FE B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  134 00000100 F04F 002A       MOV              R0, #0x2A   ;R0 = ASTERISK HEX 
                                                            VALUE
  135 00000104 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  136 00000106 E92D 4800       PUSH             {LR, R11}
  137 0000010A F7FF FFFE       BL               ST7735_OutChar
  138 0000010E E8BD 4800       POP              {LR, R11}
  139 00000112 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  140 00000114 F04F 002A       MOV              R0, #0x2A   ;R0 = ASTERISK HEX 
                                                            VALUE
  141 00000118 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  142 0000011A E92D 4800       PUSH             {LR, R11}
  143 0000011E F7FF FFFE       BL               ST7735_OutChar
  144 00000122 E8BD 4800       POP              {LR, R11}
  145 00000126 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  146 00000128 E039            B                RETURN
  147 0000012A         PRINT_DECIMAL
  148 0000012A F81B 0C03       LDRB             R0, [R11, #THOUSANDS] ;R0 = THO
                                                            USANDS VALUE
  149 0000012E F100 0030       ADD              R0, #0x30
  150 00000132 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  151 00000134 E92D 4800       PUSH             {R11, LR}
  152 00000138 F7FF FFFE       BL               ST7735_OutChar
  153 0000013C E8BD 4800       POP              {LR, R11}
  154 00000140 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  155 00000142 F04F 002E       MOV              R0, #DECIMAL ;R0 = DECIMAL HEX 
                                                            VALUE
  156 00000146 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  157 00000148 E92D 4800       PUSH             {R11, LR}
  158 0000014C F7FF FFFE       BL               ST7735_OutChar
  159 00000150 E8BD 4800       POP              {LR, R11}
  160 00000154 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  161 00000156 F81B 0C02       LDRB             R0, [R11, #HUNDREDS] ;R0 = HUND
                                                            REDS VALUE
  162 0000015A F100 0030       ADD              R0, #0x30
  163 0000015E B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  164 00000160 E92D 4800       PUSH             {R11, LR}
  165 00000164 F7FF FFFE       BL               ST7735_OutChar
  166 00000168 E8BD 4800       POP              {LR, R11}
  167 0000016C B002            ADD              SP, #8      ;DEALLOCATE MEMORY 



ARM Macro Assembler    Page 5 


                                                            FOR FUNCTION CALL
  168 0000016E F81B 0C01       LDRB             R0, [R11, #TENS] 
                                                            ;R0 = TENS VALUE
  169 00000172 F100 0030       ADD              R0, #0x30
  170 00000176 B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  171 00000178 E92D 4800       PUSH             {R11, LR}
  172 0000017C F7FF FFFE       BL               ST7735_OutChar
  173 00000180 E8BD 4800       POP              {LR, R11}
  174 00000184 B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  175 00000186 F89B 0000       LDRB             R0, [R11, #ONES] 
                                                            ;R0 = ONES VALUE
  176 0000018A F100 0030       ADD              R0, #0x30
  177 0000018E B082            SUB              SP, #8      ;ALLOCATE MEMORY FO
                                                            R FUNCTION CALL
  178 00000190 E92D 4800       PUSH             {R11, LR}
  179 00000194 F7FF FFFE       BL               ST7735_OutChar
  180 00000198 E8BD 4800       POP              {LR, R11}
  181 0000019C B002            ADD              SP, #8      ;DEALLOCATE MEMORY 
                                                            FOR FUNCTION CALL
  182 0000019E         RETURN
  183 0000019E E8BD 0FF0       POP              {R4-R11}    ;Restore Registers
  184 000001A2 4770            BX               LR
  185 000001A4         
  186 000001A4                 ALIGN
  187 000001A4         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  188 000001A4         
  189 000001A4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  190 000001A4                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Users\adity\Desktop\Keil\ARM\RV31\INC -IC:\Users\adity\Deskt
op\Keil\ARM\CMSIS\Include -IC:\Users\adity\Desktop\Keil\ARM\Inc\Luminary --list
=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file Print.s
   Uses
      None
Comment: .text unused
ASTERISK 000000C4

Symbol: ASTERISK
   Definitions
      At line 115 in file Print.s
   Uses
      At line 96 in file Print.s
Comment: ASTERISK used once
COMPARE 00000044

Symbol: COMPARE
   Definitions
      At line 57 in file Print.s
   Uses
      At line 54 in file Print.s
Comment: COMPARE used once
DONE 0000006A

Symbol: DONE
   Definitions
      At line 71 in file Print.s
   Uses
      At line 68 in file Print.s
Comment: DONE used once
FINISH 00000022

Symbol: FINISH
   Definitions
      At line 45 in file Print.s
   Uses
      At line 42 in file Print.s
Comment: FINISH used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 32 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 89 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
LOOP 00000014

Symbol: LOOP



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 39 in file Print.s
   Uses
      At line 44 in file Print.s
Comment: LOOP used once
PRINT 00000046

Symbol: PRINT
   Definitions
      At line 59 in file Print.s
   Uses
      At line 70 in file Print.s
Comment: PRINT used once
PRINT_DECIMAL 0000012A

Symbol: PRINT_DECIMAL
   Definitions
      At line 147 in file Print.s
   Uses
      At line 114 in file Print.s
Comment: PRINT_DECIMAL used once
RETURN 0000019E

Symbol: RETURN
   Definitions
      At line 182 in file Print.s
   Uses
      At line 146 in file Print.s
Comment: RETURN used once
STORE_STACK 0000002A

Symbol: STORE_STACK
   Definitions
      At line 48 in file Print.s
   Uses
      At line 56 in file Print.s
Comment: STORE_STACK used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DECIMAL 0000002E

Symbol: DECIMAL
   Definitions
      At line 21 in file Print.s
   Uses
      At line 122 in file Print.s
      At line 155 in file Print.s

HUNDREDS FFFFFFFE

Symbol: HUNDREDS
   Definitions
      At line 18 in file Print.s
   Uses
      At line 109 in file Print.s
      At line 161 in file Print.s

LARGEST 0000270F

Symbol: LARGEST
   Definitions
      At line 22 in file Print.s
   Uses
      At line 94 in file Print.s
Comment: LARGEST used once
ONES 00000000

Symbol: ONES
   Definitions
      At line 20 in file Print.s
   Uses
      At line 101 in file Print.s
      At line 175 in file Print.s

TENS FFFFFFFF

Symbol: TENS
   Definitions
      At line 19 in file Print.s
   Uses
      At line 105 in file Print.s
      At line 168 in file Print.s

THOUSANDS FFFFFFFD

Symbol: THOUSANDS
   Definitions
      At line 17 in file Print.s
   Uses
      At line 113 in file Print.s
      At line 148 in file Print.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 64 in file Print.s
      At line 119 in file Print.s
      At line 125 in file Print.s
      At line 131 in file Print.s
      At line 137 in file Print.s
      At line 143 in file Print.s
      At line 152 in file Print.s
      At line 158 in file Print.s
      At line 165 in file Print.s
      At line 172 in file Print.s
      At line 179 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
350 symbols in table
